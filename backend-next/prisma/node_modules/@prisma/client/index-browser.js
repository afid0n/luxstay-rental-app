
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  profileImage: 'profileImage',
  balance: 'balance',
  hostRequest: 'hostRequest',
  isBanned: 'isBanned',
  banDate: 'banDate',
  createdAt: 'createdAt',
  lastLogin: 'lastLogin'
};

exports.Prisma.ApartmentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  type: 'type',
  location: 'location',
  pricePerNight: 'pricePerNight',
  coverImage: 'coverImage',
  images: 'images',
  description: 'description',
  features: 'features',
  rules: 'rules',
  createdAt: 'createdAt',
  entrepreneurId: 'entrepreneurId',
  avgRating: 'avgRating'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  apartmentId: 'apartmentId',
  startDate: 'startDate',
  endDate: 'endDate',
  status: 'status',
  totalPrice: 'totalPrice',
  createdAt: 'createdAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  apartmentId: 'apartmentId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  email: 'email',
  subject: 'subject',
  message: 'message',
  isRead: 'isRead',
  submittedAt: 'submittedAt'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  code: 'code',
  discountPercent: 'discountPercent',
  validUntil: 'validUntil'
};

exports.Prisma.SliderScalarFieldEnum = {
  id: 'id',
  title: 'title',
  imageURL: 'imageURL',
  page: 'page'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  CLIENT: 'CLIENT',
  HOST: 'HOST'
};

exports.ApartmentType = exports.$Enums.ApartmentType = {
  ISLAND: 'ISLAND',
  APARTMENT: 'APARTMENT',
  VINTAGE: 'VINTAGE',
  VILLA: 'VILLA',
  PENTHOUSE: 'PENTHOUSE',
  GARDEN: 'GARDEN',
  POOL: 'POOL'
};

exports.Feature = exports.$Enums.Feature = {
  WIFI: 'WIFI',
  AC: 'AC',
  HEATING: 'HEATING',
  KITCHEN: 'KITCHEN',
  PARKING: 'PARKING',
  POOL: 'POOL',
  PET_FRIENDLY: 'PET_FRIENDLY',
  WASHER: 'WASHER',
  DRYER: 'DRYER',
  GYM: 'GYM',
  ELEVATOR: 'ELEVATOR',
  BALCONY: 'BALCONY',
  HOT_TUB: 'HOT_TUB',
  BREAKFAST_INCLUDED: 'BREAKFAST_INCLUDED',
  TV: 'TV',
  SMOKE_DETECTOR: 'SMOKE_DETECTOR',
  FIRE_EXTINGUISHER: 'FIRE_EXTINGUISHER',
  FURNISHED: 'FURNISHED',
  WHEELCHAIR_ACCESSIBLE: 'WHEELCHAIR_ACCESSIBLE',
  BABY_COT: 'BABY_COT'
};

exports.Rule = exports.$Enums.Rule = {
  NO_SMOKING: 'NO_SMOKING',
  NO_PETS: 'NO_PETS',
  NO_PARTIES: 'NO_PARTIES',
  QUIET_HOURS: 'QUIET_HOURS',
  CHECK_IN_AFTER_3PM: 'CHECK_IN_AFTER_3PM',
  CHECK_OUT_BEFORE_11AM: 'CHECK_OUT_BEFORE_11AM',
  NO_UNREGISTERED_GUESTS: 'NO_UNREGISTERED_GUESTS',
  CLEAN_UP_AFTER_YOURSELF: 'CLEAN_UP_AFTER_YOURSELF',
  NO_ILLEGAL_ACTIVITIES: 'NO_ILLEGAL_ACTIVITIES',
  RESPECT_NEIGHBORS: 'RESPECT_NEIGHBORS'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Apartment: 'Apartment',
  Booking: 'Booking',
  Review: 'Review',
  Contact: 'Contact',
  Coupon: 'Coupon',
  Slider: 'Slider'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
